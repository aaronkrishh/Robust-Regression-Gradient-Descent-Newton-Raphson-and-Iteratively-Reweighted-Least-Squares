segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(outliers, i)
}
}
drawBoxPlot(data2)
for (i in levels(factor(data$Species))){
plot( data$PetalWidth[data$Species == i],
data$SepalLength[data$Species == i],
main = paste("Sepal Width VS Sepal Length", i),
col=adjustcolor("black", alpha = 0.3 ),
pch = 16)
points(mean(data$PetalWidth[data$Species == i]),
mean(data$SepalLength[data$Species == i]),
col = 'red', pch = 16)
}
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(outliers, rep(1, length(outliers)))
}
}
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(outliers, rep(1, length(outliers)))
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(rep(i, length(outliers)),outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.25, length(outliers)),outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.5, length(outliers)),outliers)
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.5, length(outliers)),outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.5, length(outliers)),outliers)
}
}
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i , length(outliers)),outliers)
}
}
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.5, length(outliers)),outliers)
}
}
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75,whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i , length(outliers)),outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, whisker_max, i+0.75, whisker_max, col = 'red')
segments(i + 0.25, whisker_min, i+0.75, whisker_min, col = 'red')
points(rep(i +.25, length(outliers)),outliers)
}
}
drawBoxPlot(data2)
drawBoxPlot <- function(df) {
# number of columns in the data frame
m <- ncol(df)
boxplot_stats <- sapply(df, function(x) boxplot.stats(x)$stats)
# loop through each column and calculate the five-number summary
plot(0,0, xlim = c(1,m+.5), ylim = range(unlist(boxplot_stats)),xaxt = 'n')
axis(1, at = seq(1.5, m+0.5, 1), labels = colnames(df))
for (i in 1:m) {
col <- df[,i]
stats <- boxplot_stats[,i]
# extract the five-number summary
min_val <- stats[1]
max_val <- stats[5]
medians <- stats[3]
q1 <- stats[2]
q3 <- stats[4]
# calculate the inter-quartile range (IQR)
IQR <- q3 - q1
# calculate the lower and upper limits for the whiskers
lower_limit <- q1 - 1.5 * IQR
upper_limit <- q3 + 1.5 * IQR
whisker_min <- max(col[col >= (lower_limit)])
whisker_max <- min(col[col <= (upper_limit)])
outliers <-  col[(col < whisker_min) | (col > whisker_max)]
# plot the boxplot
rect(i + 0.25, q1, i+0.75, q3)
segments(i + 0.25, medians, i+0.75, medians, col = 'red')
segments(i + 0.25, max_val, i+0.75, max_val, col = 'red')
segments(i + 0.25, min_val, i+0.75, min_val, col = 'red')
points(rep(i +.25, length(outliers)),outliers)
}
}
drawBoxPlot(data2)
knitr::opts_chunk$set(echo = TRUE)
par(mfrow = c(1,1))
plot(powerfun(data$SepalLength + 1, -2.75),
powerfun(data$PetalRatio + 1, 2.25),
pch = 17, xlab = 'Sepal Length', ylab = 'Petal Ratio',
main = bquote(alpha[x] == .(-2.75) ~ "," ~ alpha[y] == .(2.25))
)
